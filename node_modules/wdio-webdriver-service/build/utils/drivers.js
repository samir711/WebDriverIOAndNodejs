'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.getBinPath = exports.isValidDriverType = undefined;

var _geckodriver = require('geckodriver');

var _geckodriver2 = _interopRequireDefault(_geckodriver);

var _chromedriver = require('chromedriver');

var _chromedriver2 = _interopRequireDefault(_chromedriver);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Driver = function Driver(name, binPath) {
    _classCallCheck(this, Driver);

    this.name = name;
    this.binPath = binPath;
};

var DRIVERS = [new Driver('geckodriver', _geckodriver2.default.path), new Driver('chromedriver', _chromedriver2.default.path)];

var isValidDriverType = exports.isValidDriverType = function isValidDriverType(type) {
    return DRIVERS.some(function (dr) {
        return dr.name === type;
    });
};
var getBinPath = exports.getBinPath = function getBinPath(type) {
    return DRIVERS.find(function (d) {
        return d.name === type;
    }).binPath;
};
